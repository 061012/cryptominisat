import sys
from distutils.core import setup, Extension
from distutils import sysconfig

def _init_posix(init):
    """
    Forces g++ instead of gcc on most systems
    credits to eric jones (eric@enthought.com) (found at Google Groups)
    """
    def wrapper():
        init()

        config_vars = sysconfig.get_config_vars()  # by reference
        if config_vars["MACHDEP"].startswith("sun"):
            # Sun needs forced gcc/g++ compilation
            config_vars['CC'] = 'gcc'
            config_vars['CXX'] = 'g++'

        # FIXME raises hardening-no-fortify-functions lintian warning.
        else:
            # Non-Sun needs linkage with g++
            config_vars['LDSHARED'] = 'g++ -shared -g -W -Wall -Wno-deprecated'

        config_vars['CFLAGS'] = '-g -W -Wall -Wno-deprecated'
        config_vars['OPT'] = '-g -W -Wall -Wno-deprecated'

    return wrapper
sysconfig._init_posix = _init_posix(sysconfig._init_posix)

version = '${CPACK_PACKAGE_VERSION}'

ext_kwds = dict(
    name = "pycryptosat",
    sources = ["${CMAKE_CURRENT_SOURCE_DIR}/pycryptosat.cpp"],
    define_macros = [],
    extra_compile_args = ['--std=c++11', '-I${PROJECT_SOURCE_DIR}'],
    language = "c++",
    library_dirs=['.', '/usr/local/lib', '${PROJECT_BINARY_DIR}/lib'],
    libraries = ['cryptominisat4']
)

setup(
    name = "pycryptosat",
    version = version,
    author = "Mate Soos",
    author_email = "soos.mate@gmail.com",
    url = "https://github.com/msoos/cryptominisat",
    license = "LGPLv2",
    classifiers = [
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "Operating System :: OS Independent",
        "Programming Language :: C++",
        "Programming Language :: Python :: 2",
        "Programming Language :: Python :: 2.5",
        "Programming Language :: Python :: 2.6",
        "Programming Language :: Python :: 2.7",
        "Topic :: Utilities",
    ],
    ext_modules = [Extension(**ext_kwds)],
    py_modules = ['test_pycryptosat'],
    description = "bindings to CryptoMiniSat (a SAT solver)",
    long_description = open('${CMAKE_CURRENT_SOURCE_DIR}/README.rst').read(),
)
